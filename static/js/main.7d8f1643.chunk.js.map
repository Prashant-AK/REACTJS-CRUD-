{"version":3,"sources":["componenets/layouts/emoji.jpg","componenets/pages/Home.js","componenets/pages/About.js","componenets/layouts/Navbar.js","componenets/pages/Adduser.js","componenets/pages/Edituser.js","componenets/pages/View.js","componenets/layouts/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","useState","users","setUser","useEffect","loadUsers","a","axios","get","result","console","log","data","deleteuser","id","delete","className","style","marginTop","scope","map","user","i","key","name","username","email","to","onClick","About","Navbar","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Adduser","history","useHistory","phone","city","website","oninputchange","e","target","value","preventDefault","Axios","post","push","minHeight","padding","backgroundColor","onSubmit","placeholder","onChange","Edituser","useParams","loadUser","put","View","NotFound","src","logo","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7d8f1643.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/emoji.973092b0.jpg\";","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nfunction Home() {\r\n    const [users, setUser] = useState([]);\r\n    \r\n    useEffect(() => {\r\n        loadUsers();\r\n    }, []);\r\n\r\n    const loadUsers = async () => {\r\n        const result = await axios.get(\"http://localhost:3010/users\")\r\n        console.log(result.data);\r\n        setUser(result.data)\r\n        \r\n    }\r\n\r\n    const deleteuser=async id=>{\r\n        await axios.delete(`http://localhost:3010/users/${id}`);\r\n        loadUsers();\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div  style={{marginTop:'10vh'}}>\r\n            <table className=\"table table-hover table-dark\">\r\n                <thead>\r\n                    <tr >\r\n                        <th  scope=\"col\">Sr No.</th>\r\n                        <th  scope=\"col\">Name</th>\r\n                        <th  scope=\"col\">User Name</th>\r\n                        <th  scope=\"col\">Email</th>\r\n                        <th className=\"text-center\">Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        users.map((user,i) => (\r\n                           <tr key={i}>\r\n                               <td scope=\"row\">{i +1}</td>\r\n                                <td>{user.name}</td>\r\n                                <td>{user.username}</td>\r\n                                <td>{user.email}</td>\r\n                                <td>\r\n                                    <NavLink to={`/user/${user.id}`} className=\"btn btn-primary mr-2\">View</NavLink>\r\n                                    <NavLink to={`/edituser/${user.id}`} className=\"btn btn-outline-warning mr-2\">Edit</NavLink>\r\n                                    <NavLink to=\"#\" className=\"btn btn-outline-danger\" onClick={()=>deleteuser(user.id)}>Delete</NavLink>\r\n                                </td>\r\n                           </tr> \r\n                        ))\r\n                    }\r\n                    \r\n                </tbody>\r\n            </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\n\r\nfunction About() {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"card card-header\">\r\n                <h1>About CRUD Application </h1>\r\n            </div>\r\n            <div className=\"card card-body\">\r\n                <p>CRUD stands for Create, Read, Update, and Delete. But put more simply, in regards to its use in RESTful APIs, CRUD is the standardized use of HTTP Action Verbs. ... Keep in mind there are several\r\n                     different HTTP Action Verbs available, and it's easy to want to incorporate these new verbs and make your API new and different.</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n// import '../../../node_modules/bootstrap/js/dist/collapse.js'\r\nfunction Navbar() {\r\n    return (\r\n\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n            <NavLink className=\"navbar-brand\" to=\"#\">Navbar</NavLink>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                <ul className=\"navbar-nav\">\r\n                    <li className=\"nav-item\">\r\n                        <NavLink className=\"nav-link\"  to=\"/\">Home <span className=\"sr-only\">(current)</span></NavLink>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <NavLink className=\"nav-link\"  to=\"/about\">About</NavLink>\r\n                    </li>\r\n                    \r\n\r\n                </ul>\r\n            </div>\r\n            <NavLink to=\"/adduser\" className=\"align-right btn btn-outline-light\">Add User</NavLink>\r\n        </nav>\r\n\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React, { useState } from 'react'\r\nimport Axios from 'axios';\r\nimport {useHistory} from 'react-router-dom' //--> to redirect\r\n\r\nfunction Adduser() {\r\n    let history=useHistory(); //--> assigning variable to useHistory() \r\n    const [user, setUser] = useState({\r\n        name:'',\r\n        username:'',\r\n        email:'',\r\n        phone:'',\r\n        city:'',\r\n        website:''\r\n    });\r\n    const { name, username, email, phone,city, website } = user;\r\n    \r\n    const oninputchange=e => {\r\n        // console.log(e.target.value); \r\n        setUser({...user,[e.target.name]:e.target.value})\r\n    }\r\n    \r\n    const Adduser=async e=>{\r\n        e.preventDefault();\r\n        await Axios.post(\"http://localhost:3010/users\",user);\r\n        history.push(\"/\")//--> redirecting to home page\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\" style={{ minHeight: '400px', marginTop: '10%', padding: '2vh', backgroundColor: '#F5F5F5 ' }}>\r\n            <h1 className=\"text-center\">Add User</h1>\r\n            <div className=\"container\">\r\n                <form onSubmit={e=>Adduser(e)} >\r\n                    <div className=\"form-group\">\r\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Enter Your Name\"\r\n                            onChange={e => oninputchange(e)}\r\n                            name=\"name\"\r\n                            value={name} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"username\" className=\"form-control\" placeholder=\"Enter Your UserName\"\r\n                            onChange={e => oninputchange(e)}\r\n                            name=\"username\"\r\n                            value={username} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"email\" className=\"form-control\" placeholder=\"Enter Your Email_id\"\r\n                            onChange={e => oninputchange(e)}\r\n                            name=\"email\"\r\n                            value={email} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"phno\" className=\"form-control\" placeholder=\"Enter Your PhoneNo.\"\r\n                            onChange={e => oninputchange(e)}\r\n                            name=\"phone\"\r\n                            value={phone} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"website\" className=\"form-control\" placeholder=\"Enter Your City\"\r\n                            onChange={e => oninputchange(e)}\r\n                            name=\"city\"\r\n                            value={city} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"website\" className=\"form-control\" placeholder=\"Enter Your Website Name\"\r\n                            onChange={e => oninputchange(e)}\r\n                            name=\"website\"\r\n                            value={website} />\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-block btn-primary\">Add User</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Adduser\r\n","import React, { useState, useEffect } from 'react'\r\nimport Axios from 'axios';\r\nimport { useHistory, useParams } from 'react-router-dom' //--> to redirect\r\n\r\nfunction Edituser() {\r\n    let history = useHistory(); //--> assigning variable to useHistory() \r\n    const { id } = useParams();\r\n\r\n    const [user, setUser] = useState({\r\n        name: '',\r\n        username: '',\r\n        email: '',\r\n        phone: '',\r\n        city: '',\r\n        website: ''\r\n    });\r\n    const { name, username, email, phone,city, website } = user;\r\n\r\n    useEffect(() => {\r\n        // console.log('in use Effect')\r\n        loadUser();\r\n    }, []);\r\n\r\n    const oninputchange = e => {\r\n        // console.log(e.target.value); \r\n        setUser({ ...user, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    const Edituser = async e => {\r\n        e.preventDefault();\r\n        await Axios.put(`http://localhost:3010/users/${id}`, user);\r\n        history.push(\"/\")//--> redirecting to home page\r\n    }\r\n    const loadUser = async () => {\r\n        console.log(\"running\")\r\n        const result = await Axios.get(`http://localhost:3010/users/${id}`)\r\n        console.log(result.data);\r\n        setUser(result.data)\r\n    }\r\n    return (\r\n        <div className=\"container\" style={{ minHeight: '400px', marginTop: '10%', padding: '2vh', backgroundColor: '#F5F5F5 ' }}>\r\n            <h1 className=\"text-center\">Edit User {name}</h1>\r\n            <div className=\"container\">\r\n\r\n                <form onSubmit={e => Edituser(e)} >\r\n                    <div className=\"form-group\">\r\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Enter Your Name\"\r\n                            onChange={e => oninputchange(e)}\r\n                            name=\"name\"\r\n                            value={name} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"username\" className=\"form-control\" placeholder=\"Enter Your UserName\"\r\n                            onChange={e => oninputchange(e)}\r\n                            name=\"username\"\r\n                            value={username} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"email\" className=\"form-control\" placeholder=\"Enter Your Email_id\"\r\n                            onChange={e => oninputchange(e)}\r\n                            name=\"email\"\r\n                            value={email} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"phno\" className=\"form-control\" placeholder=\"Enter Your PhoneNo.\"\r\n                            onChange={e => oninputchange(e)}\r\n                            name=\"phone\"\r\n                            value={phone} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"city\" className=\"form-control\" placeholder=\"Enter Your City.\"\r\n                            onChange={e => oninputchange(e)}\r\n                            name=\"city\"\r\n                            value={city} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"website\" className=\"form-control\" placeholder=\"Enter Your Website Name\"\r\n                            onChange={e => oninputchange(e)}\r\n                            name=\"website\"\r\n                            value={website} />\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-block btn-warning\">Update User</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Edituser\r\n","import React,{useState, useEffect} from 'react'\r\nimport Axios from 'axios';\r\nimport { useParams } from 'react-router-dom'\r\n\r\nfunction View() {\r\n\r\n    const [user, setUser] = useState({\r\n        name:'',\r\n        username:'',\r\n        email:'',\r\n        phone:'',\r\n        city:'',\r\n        website:''\r\n    });\r\n    const {id}= useParams();\r\n\r\n    useEffect(() => {\r\n       loadUser();\r\n    }, [0])\r\n\r\n    const loadUser=async()=>{\r\n        const result = await Axios.get(` http://localhost:3010/users/${id}`);\r\n        setUser(result.data);\r\n        console.log(result.data);\r\n        \r\n        \r\n    }\r\n    return (\r\n        <div className=\"constainer\">\r\n            <div className=\"card card-header\">\r\n            <h1>{user.name} Details</h1>\r\n            </div>\r\n            <div className=\"card card-body\">\r\n                <ul className=\"list-group w-50\">\r\n                <li className=\"list-group-item\"> Name: {user.name}</li>\r\n                <li className=\"list-group-item\">User Name: {user.username}</li>\r\n                <li className=\"list-group-item\">Email: {user.email}</li>\r\n                <li className=\"list-group-item\">Phone NO. : {user.phone}</li>\r\n                <li className=\"list-group-item\">Website: {user.website}</li>\r\n                <li className=\"list-group-item\">City: {user.city}</li>\r\n                </ul>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default View\r\n ","import React from 'react'\r\nimport logo from './emoji.jpg'\r\nimport {NavLink} from 'react-router-dom'\r\nfunction NotFound() {\r\n    return (\r\n        <div className=\"not-found\">\r\n            <div><img className=\"rounded mx-auto d-block\" src={logo}/></div>\r\n            <div><h1 className=\"display-1\">Page Not Found</h1>\r\n            <NavLink className=\"btn-lg btn-success\" to='/'> Back To Home</NavLink></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound\r\n","import React from 'react';\nimport '../node_modules/bootstrap/dist/css/bootstrap.css'\n\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from './componenets/pages/Home';\nimport About from './componenets/pages/About';\nimport Navbar from './componenets/layouts/Navbar';\nimport Adduser from './componenets/pages/Adduser';\nimport Edituser from './componenets/pages/Edituser';\nimport View from './componenets/pages/View';\nimport NotFound from './componenets/layouts/NotFound';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n      <Router>\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/about\" component={About} />\n          <Route exact path=\"/adduser\" component={Adduser} />\n          <Route exact path=\"/edituser/:id\" component={Edituser} />\n          <Route exact path=\"/user/:id\" component={View} />\n          <Route   component={NotFound} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}